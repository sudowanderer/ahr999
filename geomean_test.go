package main

import (
	"math"
	"testing"
)

func TestGeometricMeanAccuracy(t *testing.T) {
	data := []float64{
		88242.26, 87502.55, 85218.32, 85089.96, 84460.63, 85011.4, 83979.18,
		83621.15, 84631.73, 83758.15, 85298.51, 83456.02, 79572.12, 82603.28,
		76348.84, 79161.57, 78438.57, 83532.42, 83888.23, 83183.08, 82519.81,
		85170.91, 82500.59, 82371.38, 82649.57, 84419.96, 87231.58, 86958.28,
		87413.96, 87469.29, 86081.69, 83815.3, 84064.01, 84226.52, 86888.14,
		82722.73, 84019.34, 82576.04, 84357.01, 83981.73, 81082.78, 83682.95,
		82964.97, 78627.71, 80745.41, 86216.26, 86720.67, 89955.78, 90599.73,
		87250.8, 86202.13, 94252.3, 86005.48, 84340.57, 84732.36, 84187.59,
		88694.87, 91548.35, 96321.95, 96523.63, 96194.8, 98409.38, 96622.04,
		95663, 95786.34, 96072.61, 97563.96, 97470.89, 96618.59, 97837.25,
		95786.05, 97440.22, 96464.24, 96467.56, 96470.1, 96629.72, 96447.3,
		97774.1, 101479.84, 97698.28, 100654.2, 102394.64, 104763.37, 103761.9,
		101362.66, 102066.19, 102601.46, 104790.47, 104714.24, 103915.2, 106140.08,
		102304.11, 101360.36, 104535.34, 104098.29, 100005.08, 100507.96,
		96565.3, 94570.35, 94557.24, 94589.23, 94698.43, 92547.63, 95062.1,
		96960.38, 102233.01, 98426.14, 98250.13, 98180.77, 97023.09, 94595.69,
		93548.04, 92794.72, 93734.42, 95336.17, 94289.97, 95753.96, 99441.97,
		98673.72, 94845.13, 95173.03, 97281.41, 97805.26, 97462.36, 100231.42,
		106137.67, 106072.77, 104446.39, 101415.7, 101435.57, 99981.99,
		101133.62, 96610.55, 97266.2, 101116.31, 99843.88, 99738.55, 96943.47,
		98606.9, 95858.41, 95830.65, 97220.98, 96372.3, 97474.44, 95663.79,
		95868.06, 91965.86, 93020, 97900.38, 97705.35, 98912.69, 98320.27,
		94299.39, 92298.47, 90450.36, 89851.84, 90584.28, 91039.29, 87328.87,
		90386.07, 87943.93, 88660.52, 80399.71, 76679.07, 76491.99, 75841.88,
		75573.91, 69390.29, 67830.72, 68757.18, 69364.23, 69511.35, 70307.05,
		72365.37, 72744.75, 69950.8, 68019.06, 67100.6, 66729.82, 68194.21,
		66672.3, 67431.31, 67381.26, 69021.97, 68364.02, 68428.74, 67420.78,
		67636.36, 67085.31, 66091.5, 62904.47, 63206.78, 62512.51, 60330.71,
		60635.14, 62171.09, 62238.25, 62830.06, 62088, 62086.44, 60746.37,
		60649.8, 60817.98, 63343.55, 65619.03, 65850.3, 65776.19, 65153.59,
		63157.2, 64255.47, 63327.02, 63565.99, 63344.88, 63209.64, 62944.89,
		61761, 60317.79, 58196.55, 59146.04, 59994.57, 60494.99, 58123.54,
		57312.12, 57633.2, 57045.5, 54876.86, 54159.96, 53970.09, 56176.55,
		57972.35, 57494.39, 59121.13, 57317.8, 58975.84, 59137.62, 59351.92,
		59021.22, 59416.98,
	}

	expected := 82244.85384821 // Python stats.gmean() 结果

	got, err := GeometricMean(data)
	if err != nil {
		t.Fatal("Error:", err)
	}

	diffRatio := math.Abs(got-expected) / expected
	if diffRatio > 0.01 {
		t.Errorf("Too much difference: got %f, expected %f, diff = %.4f%%", got, expected, diffRatio*100)
	}
}
